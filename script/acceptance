#!/bin/bash

# COLORS
OFF='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'

# set the working directory to the root of the project
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

if [[ "$CI" == "true" ]]; then
  source script/ci-env
fi

export CRYSTAL_VERSION=$(cat .crystal-version)

# start the docker compose stack
make run

ITS_UP="attempting to crunch the numbers"

# initialize counter
counter=0

echo -e "${BLUE}waiting for the service to start...${OFF}"

# wait for the server to start by grep-ing the logs for the ITS_UP string
while ! docker compose logs crystal-base-template | grep "$ITS_UP"; do
  sleep 1
  # increment counter
  counter=$((counter+1))
  # if counter is 120, exit the loop
  if [ $counter -eq 120 ]; then
    echo "timeout reached - service did not start"
    exit 1
  fi
done

echo -e "${GREEN}the service is up! starting acceptance tests${OFF}\n"

###### acceptance tests ######

mkdir -p $DIR/tmp

SUCCESS="true"

# save the logs of the container to a file
docker compose logs crystal-base-template > $DIR/tmp/acceptance-test-logs.txt

# look for the number 234123548 in the logs
grep -q "234123548" $DIR/tmp/acceptance-test-logs.txt

# if the number 5 is not found, set SUCCESS to false
if [ $? -eq 0 ]; then
  echo -e "✅ ${GREEN}number 234123548 found in logs${OFF}"
else
  SUCCESS="false"
fi

###### acceptance tests results ######

# cleanup
rm $DIR/tmp/acceptance-test-logs.txt

echo -e "\n${PURPLE}acceptance tests results:${OFF}"
if [[ $SUCCESS == "true" ]]; then
  echo -e "✅ ${GREEN}all acceptance tests passed${OFF}"
  exit 0
else
  echo -e "${RED}acceptance tests failed${OFF}"
  exit 1
fi
